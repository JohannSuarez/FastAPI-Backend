[tool.poetry]
name = "blog"
version = "0.1.0"
description = "The backend aspects of my blog project."
authors = ["JohannSuarez <johann.suarez92@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.8"
mysql = "^0.0.3"
mysql-connector-python = "^8.0.27"
mysqlclient = "^2.1.0"
python-dotenv = "^0.19.2"
fastapi = { extras = ["all"], version = "^0.71.0" }
SQLAlchemy = "^1.4.29"
PyMySQL = "^1.0.2"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
flake8 = "^4.0.1"
black = "^21.12b0"
autopep8 = "^1.6.0"

[tool.poetry.scripts]
drive = "blog.main:drive"
tests = "scripts.project_helper:run_tests"
stubs = "scripts.project_helper:stub_gen"
analyze = "scripts.project_helper:run_analyzer"
db = "blog.main:connect"
db2 = "blog.main:sql_alch"
alch_create = "alch_practice.table_operations:create_table"
alch_read = "alch_practice.table_operations:read_column_names"
schema_tables = "alch_practice.schema:table_represent"
schema_reflect = "alch_practice.schema:schema_reflect"
schema_inspect = "alch_practice.schema:schema_inspector"
expr_language = "alch_practice.expression_language:select_all"
select_limited = "alch_practice.expression_language:select_limited"
where = "alch_practice.expression_language:where_method"
like = "alch_practice.expression_language:like_method"
select_order = "alch_practice.expression_language:select_order"
select_in = "alch_practice.expression_language:select_in"
orm = "alch_practice.orm:orm_operations"
orm_foreign_key = "alch_practice.orm:orm_foreign_key"
raw_orm = "alch_practice.raw_orm:raw_orm"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
